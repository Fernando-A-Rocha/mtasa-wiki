shared: &shared
  name: 'isCursorShowing'
  description: |
    This function determines the state of a player's cursor.
  notes:
    - This function only handles the cursor state set by the [[showCursor]] function, ignoring it if the console, chatbox, or menu is open.
    - If you use this function on the server-side, keep in mind that it only detects the [[showCursor]] function executed on the server-side and does not detect the function executed on the client-side.
  returns:
    description: |
      Returns *true* if the player's cursor is visible, and *false* if it is not.
    values:
      - type: 'bool'
        name: 'result'

server:
  <<: *shared
  parameters:
    - name: 'playerElement'
      type: 'player'
      description: 'The [[player]] from whom we want to retrieve the cursor state.'
  examples:
    - path: 'examples/isCursorShowing-1.lua'
      description: |
        This example creates a function to set the state of the player's cursor using the [[showCursor]] function.
    - path: 'examples/isCursorShowing-2.lua'
      description: |
        This example creates a function that gets the state of the player's cursor and outputs it to the chatbox using the [[outputChatBox]] function.

client:
  <<: *shared
  examples:
    - path: 'examples/isCursorShowing-3.lua'
      description: |
        This example creates a function to set the state of the player's cursor using the [[showCursor]] function. 
    - path: 'examples/isCursorShowing-4.lua'
      description: |
        If you are already advanced in scripting, using this code is recommended, as it is much more compact:
      append: true
    - path: 'examples/isCursorShowing-5.lua'
      description: |
        This example creates a function that allows the player to change the state of the cursor using the [[showCursor]] and [[bindKey]] functions. 
    - path: 'examples/isCursorShowing-6.lua'
      description: |
        If you are already advanced in scripting, using this code is recommended, as it is much more compact:
      append: true
